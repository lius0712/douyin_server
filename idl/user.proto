syntax = "proto3";
package user;
option go_package = "user";

message User {
  int64 id = 1; // 用户id
  string name = 2; // 用户名称
  optional int64 follow_count = 3; // 关注总数
  optional int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
}

message UserRegisterRequest {
  string username = 1; //用户名,最长32个字符
  string password = 2; //密码,最长32个字符
}

message UseRegisterResponse {
  int32 status_code = 1; //状态码， 0成功，其他值失败
  optional string status_msg = 2;//返回状态描述
  int64 user_id = 3; //用户id
  string token = 4; //用户鉴权token
}

message UserLoginRequest {
  string username = 1;
  string password = 2;
}

message UserLoginResponse {
  int32 status_code = 1; //状态码， 0成功，其他值失败
  optional string status_msg = 2;//返回状态描述
  int64 user_id = 3; //用户id
  string token = 4; //用户鉴权token
}

message GetUserRequest {
  int64 user_id = 1;
  string token = 2;
}

message GetUserResponse {
  int32 status_code = 1; //状态码， 0成功，其他值失败
  optional string status_msg = 2;//返回状态描述
  User user = 3; //用户信息
}

service UserService {
  rpc Register (UserRegisterRequest) returns (UseRegisterResponse);
  rpc Login (UserLoginRequest) returns (UserLoginResponse);
  rpc GetUserById (GetUserRequest) returns (GetUserResponse);
}